<UserControl x:Class="Algoloop.View.StrategiesView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:viewsupport="clr-namespace:Algoloop.ViewSupport"
    xmlns:vm="clr-namespace:Algoloop.ViewModel"
    xmlns:view="clr-namespace:Algoloop.View"
    xmlns:properties="clr-namespace:Algoloop.Properties"
    DataContext="{Binding Source={StaticResource Locator}, Path=StrategiesViewModel}" 
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ObjectDataProvider
            x:Key="settings"
            ObjectInstance="{x:Static properties:Settings.Default}"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding Source={StaticResource settings}, Path=StrategyViewSplitter, Mode=TwoWay, Converter={viewsupport:Int32FromGridLengthConverter}}"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <GridSplitter
             Grid.Column="1"
             HorizontalAlignment="Left"
             Margin="0"
             Width="5"
             Height="Auto"
             VerticalAlignment="Stretch" />
        <DockPanel>
            <ToolBar
                DockPanel.Dock="Top"
                ToolBarTray.IsLocked="True">
                <Button
                    ToolTip="Add strategy"
                    Command="{Binding AddCommand}">
                    <Image Source="/Resources/Add.png" Width="16" Height="16"/>
                </Button>
                <Button ToolTip="Delete strategy"
                    Command="{Binding DeleteCommand}"
                    CommandParameter="{Binding SelectedItem}">
                    <Image Source="/Resources/Delete.png" Width="16" Height="16"/>
                </Button>
            </ToolBar>
            <TreeView
                Grid.Column="0"
                ItemsSource="{Binding Strategies}"
                BorderThickness="0">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ContextMenu>
                    <ContextMenu>
                        <MenuItem
                            Header="Add Strategy"
                            Command="{Binding AddCommand}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/Add.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Header="Import Strategies..."
                            Command="{Binding ImportCommand}" />
                    </ContextMenu>
                </TreeView.ContextMenu>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction
                            Command="{Binding SelectedChangedCommand}"
                            CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type vm:StrategyViewModel}" ItemsSource="{Binding Jobs}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{} {0} ({1})">
                                        <Binding Path="Model.Name"/>
                                        <Binding Path="Jobs.Count"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem
                                            Header="Run Strategy"
                                            Command="{Binding RunCommand}">
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Run.png" Width="16" Height="16"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem
                                            Header="Clone Strategy"
                                            Command="{Binding CloneCommand}">
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Clone.png" Width="16" Height="16"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem
                                            Header="Delete Strategy"
                                            Command="{Binding DeleteStrategyCommand}">
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Delete.png" Width="16" Height="16"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem
                                            Header="Delete Tasks"
                                            Command="{Binding DeleteAllJobsCommand}">
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Delete.png" Width="16" Height="16"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem
                                            Header="Export Strategy..."
                                            Command="{Binding ExportCommand}" />
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type vm:StrategyJobViewModel}">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding Active}" />
                            <TextBlock Text="{Binding Model.Name}" />
                            <StackPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem
                                        Header="Delete Job"
                                        Command="{Binding DeleteJobCommand}">
                                        <MenuItem.Icon>
                                            <Image Source="/Resources/Delete.png" Width="16" Height="16"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Header="Use Parameters"
                                        Command="{Binding UseParametersCommand}">
                                        <MenuItem.Icon>
                                            <Image Source="/Resources/Clone.png" Width="16" Height="16"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                        </StackPanel>
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>
        </DockPanel>
        <ContentControl
            Grid.Column="1"
            Margin="7,0,0,0"
            Content="{Binding SelectedItem}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type vm:StrategyViewModel}">
                    <DockPanel>
                        <ToolBar
                            DockPanel.Dock="Top"
                            ToolBarTray.IsLocked="True">
                            <Button ToolTip="Run strategy" Command="{Binding RunCommand}">
                                <Image Source="/Resources/Run.png" Width="16" Height="16"/>
                            </Button>
                        </ToolBar>
                        <TabControl>
                            <TabItem Header="Configuration">
                                <xctk:PropertyGrid
                                    ShowTitle="False"
                                    ShowSearchBox="False"
                                    ShowSummary="True"
                                    ShowAdvancedOptions="False"
                                    ShowSortOptions="False"
                                    SelectedObject="{Binding Model}">
                                </xctk:PropertyGrid>
                            </TabItem>
                            <TabItem Header="{Binding Symbols.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Symbols ({0}), FallbackValue=Symbols}">
                                <ListBox
                                    SelectionMode="Extended"
                                    DockPanel.Dock="Bottom"
                                    ItemsSource="{Binding Symbols}">
                                    <ListBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem
                                                Header="Add Symbol"
                                                Command="{Binding AddSymbolCommand}">
                                                <MenuItem.Icon>
                                                    <Image Source="/Resources/Add.png" Width="16" Height="16"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem
                                                Header="Import Symbol list..."
                                                Command="{Binding ImportSymbolsCommand}" />
                                        </ContextMenu>
                                    </ListBox.ContextMenu>
                                    <ListBox.Resources>
                                        <DataTemplate DataType="{x:Type vm:SymbolViewModel}">
                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding Model.Active}" />
                                                <TextBox Text="{Binding Model.Name, Mode=TwoWay}" BorderThickness="0">
                                                    <TextBox.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem
                                                                Header="Delete Symbol"
                                                                Command="{Binding DeleteSymbolCommand}">
                                                                <MenuItem.Icon>
                                                                    <Image Source="/Resources/Delete.png" Width="16" Height="16"/>
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                        </ContextMenu>
                                                    </TextBox.ContextMenu>
                                                </TextBox>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.Resources>
                                </ListBox>
                            </TabItem>
                            <TabItem Header="{Binding Parameters.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Parameters ({0}), FallbackValue=Parameters}">
                                <DataGrid
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    AutoGenerateColumns="False"
                                    IsReadOnly="False"
                                    GridLinesVisibility="None"
                                    ItemsSource="{Binding Parameters}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn IsReadOnly="True" Header="Name" Binding="{Binding Model.Name}" />
                                        <DataGridCheckBoxColumn IsReadOnly="False" Header="Use" Binding="{Binding Model.UseValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <DataGridTextColumn IsReadOnly="False" Header="Value" Binding="{Binding Model.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <DataGridCheckBoxColumn IsReadOnly="False" Header="Use range" Binding="{Binding Model.UseRange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <DataGridTextColumn IsReadOnly="False" Header="Range" Binding="{Binding Model.Range, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataGrid.Columns>
                                    <DataGrid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem
                                                Header="Add Parameter"
                                                Command="{Binding AddParameterCommand}">
                                                <MenuItem.Icon>
                                                    <Image Source="/Resources/Add.png" Width="16" Height="16"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </DataGrid.ContextMenu>
                                    <DataGrid.Resources>
                                        <ContextMenu
                                            x:Key="RowMenu"
                                            DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                            <MenuItem
                                                Header="Delete Parameter"
                                                Command="{Binding DeleteParameterCommand}">
                                                <MenuItem.Icon>
                                                    <Image Source="/Resources/Delete.png" Width="16" Height="16"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </DataGrid.Resources>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="DataGridRow" >
                                            <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
                                        </Style>
                                    </DataGrid.RowStyle>
                                </DataGrid>
                            </TabItem>
                            <TabItem Header="{Binding Jobs.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Tasks ({0}), FallbackValue=Tasks}">
                                <DataGrid
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    AutoGenerateColumns="True"
                                    IsReadOnly="True"
                                    GridLinesVisibility="None"
                                    ItemsSource="{Binding DataView, Mode=TwoWay}">
                                    <DataGrid.Resources>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="TextBlock.TextAlignment" Value="Right" />
                                        </Style>
                                    </DataGrid.Resources>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction
                                                Command="{Binding TaskSelectionChangedCommand}"
                                                CommandParameter="{Binding Path=SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <i:InvokeCommandAction
                                            Command="{Binding TaskDoubleClickCommand}"
                                            CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <DataGrid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem
                                                Header="Delete Jobs"
                                                Command="{Binding DeleteSelectedJobsCommand}">
                                                <MenuItem.Icon>
                                                    <Image Source="/Resources/Delete.png" Width="16" Height="16"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem
                                                Header="Use Parameters"
                                                Command="{Binding UseParametersCommand}">
                                                <MenuItem.Icon>
                                                    <Image Source="/Resources/Clone.png" Width="16" Height="16"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </DataGrid.ContextMenu>
                                </DataGrid>
                            </TabItem>
                        </TabControl>
                    </DockPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:StrategyJobViewModel}">
                    <view:StrategyJobView />
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>
    </Grid>
</UserControl>
