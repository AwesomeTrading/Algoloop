<UserControl x:Class="Algoloop.View.StrategyJobView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:viewsupport="clr-namespace:Algoloop.ViewSupport"
    xmlns:vm="clr-namespace:Algoloop.ViewModel"
    xmlns:view="clr-namespace:Algoloop.View"
    xmlns:properties="clr-namespace:Algoloop.Properties"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800">
    <DockPanel>
        <ToolBar
            DockPanel.Dock="Top"
            ToolBarTray.IsLocked="True">
            <Button ToolTip="Restart strategy" Command="{Binding StartJobCommand}">
                <Image Source="/Resources/Run.png" Width="16" Height="16"/>
            </Button>
            <Button ToolTip="Stop strategy" Command="{Binding StopJobCommand}">
                <Image Source="/Resources/Stop.png" Width="16" Height="16"/>
            </Button>
            <Button ToolTip="Delete strategy" Command="{Binding DeleteJobCommand}">
                <Image Source="/Resources/Delete.png" Width="16" Height="16"/>
            </Button>
        </ToolBar>
        <TabControl>
            <TabItem Header="Configuration">
                <ScrollViewer>
                    <xctk:PropertyGrid
                        ShowTitle="False"
                        ShowSearchBox="False"
                        ShowSummary="True"
                        ShowAdvancedOptions="False"
                        ShowSortOptions="False"
                        IsReadOnly="True"
                        SelectedObject="{Binding Model}">
                    </xctk:PropertyGrid>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="{Binding Symbols.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Symbols ({0}), FallbackValue=Symbols}">
                <ListBox
                    SelectionMode="Extended"
                    DockPanel.Dock="Bottom"
                    ItemsSource="{Binding Symbols}">
                    <ListBox.Resources>
                        <DataTemplate DataType="{x:Type vm:SymbolViewModel}">
                            <StackPanel Orientation="Horizontal">
                                <CheckBox IsChecked="{Binding Model.Active}" IsEnabled="False"/>
                                <TextBlock Text="{Binding Model.Name}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.Resources>
                </ListBox>
            </TabItem>
            <TabItem Header="{Binding Model.Parameters.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Parameters ({0}), FallbackValue=Parameters}">
                <DataGrid HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    AutoGenerateColumns="False"
                    GridLinesVisibility="None"
                    IsReadOnly="True"
                    ItemsSource="{Binding Parameters}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Parameter" Binding="{Binding Model.Name}" />
                        <DataGridCheckBoxColumn Header="Use" Binding="{Binding Model.UseValue}" />
                        <DataGridTextColumn Header="Value" Binding="{Binding Model.Value}" />
                        <DataGridCheckBoxColumn Header="Use range" Binding="{Binding Model.UseRange}" />
                        <DataGridTextColumn Header="Range" Binding="{Binding Model.Range}" />
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="{Binding Statistics.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Statistics ({0}), FallbackValue=Statistics}">
                <DataGrid HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    AutoGenerateColumns="False"
                    GridLinesVisibility="None"
                    IsReadOnly="True"
                    ItemsSource="{Binding Statistics}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                        <DataGridTextColumn Header="Value" Binding="{Binding Value}" />
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="{Binding Orders.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Trades ({0}), FallbackValue=Trades}">
                <DataGrid
                    IsReadOnly="True"
                    GridLinesVisibility="None"
                    AutoGenerateColumns="False"
                    ItemsSource="{Binding Orders}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Date Time" Binding="{Binding Time, StringFormat=u}"/>
                        <DataGridTextColumn Header="Symbol" Binding="{Binding Symbol}"/>
                        <DataGridTextColumn Header="Price" Binding="{Binding Price}"/>
                        <DataGridTextColumn Header="Currency" Binding="{Binding PriceCurrency}"/>
                        <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
                        <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}"/>
                        <DataGridTextColumn Header="Value" Binding="{Binding Value}"/>
                        <DataGridTextColumn Header="Operation" Binding="{Binding Direction}"/>
                        <DataGridTextColumn Header="Status" Binding="{Binding Status}"/>
                        <DataGridTextColumn Header="Tag" Binding="{Binding Tag}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="{Binding Charts.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Chart ({0}), FallbackValue=Chart}">
                <view:AmChart ItemsSource="{Binding Charts}"/>
            </TabItem>
            <TabItem Header="{Binding Loglines, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Logs ({0}), FallbackValue=Logs}">
                <TextBox
                    Text="{Binding Logs, Mode=OneWay}"
                    IsReadOnly="True"
                    VerticalScrollBarVisibility="Auto" />
            </TabItem>
        </TabControl>
    </DockPanel>
</UserControl>
