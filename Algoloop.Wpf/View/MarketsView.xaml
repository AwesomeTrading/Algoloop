<UserControl x:Class="Algoloop.Wpf.View.MarketsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:viewsupport="clr-namespace:Algoloop.Wpf.ViewSupport"
    xmlns:wpf="clr-namespace:Capnode.Wpf.DataGrid;assembly=Capnode.Wpf"
    xmlns:vm="clr-namespace:Algoloop.Wpf.ViewModel"
    xmlns:amcharts="clr-namespace:AmCharts;assembly=AmCharts"
    xmlns:properties="clr-namespace:Algoloop.Wpf.Properties"
    DataContext="{Binding Source={StaticResource Locator}, Path=MarketsViewModel}" 
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}" x:Key="RightCell">
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style TargetType="{x:Type DataGridCell}" x:Key="BlinkCell">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                    <BeginStoryboard>
                        <Storyboard TargetProperty="Background.Color">
                            <ColorAnimation BeginTime="0:0:0.2" Duration="0:0:0.5" To="Transparent"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <ObjectDataProvider
            x:Key="settings"
            ObjectInstance="{x:Static properties:Settings.Default}"/>
    </UserControl.Resources>

    <UserControl.Cursor>
        <Binding Path="IsBusy" Converter="{viewsupport:BusyMouseConverter}"/>
    </UserControl.Cursor>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding Source={StaticResource settings}, Path=MarketViewSplitter, Mode=TwoWay, Converter={viewsupport:Int32FromGridLengthConverter}}"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <GridSplitter
             Grid.Column="1"
             HorizontalAlignment="Left"
             Margin="0"
             Width="5"
             Height="Auto"
             VerticalAlignment="Stretch" />
        <DockPanel Grid.Column="0">
            <ToolBar
                DockPanel.Dock="Top"
                ToolBarTray.IsLocked="True">
                <Button ToolTip="Add market" Command="{Binding AddCommand}">
                    <Image Source="/Resources/Add.png" Width="16" Height="16"/>
                </Button>
                <Button ToolTip="Delete" Command="{Binding SelectedItem.DeleteCommand}">
                    <Image Source="/Resources/Delete.png" Width="16" Height="16"/>
                </Button>
                <Button ToolTip="Start market" Command="{Binding SelectedItem.StartCommand}">
                    <Image Source="/Resources/Run.png" Width="16" Height="16"/>
                </Button>
                <Button ToolTip="Stop market" Command="{Binding SelectedItem.StopCommand}">
                    <Image Source="/Resources/Stop.png" Width="16" Height="16"/>
                </Button>
            </ToolBar>
            <TreeView
                ItemsSource="{Binding Markets}"
                BorderThickness="0">
                <TreeView.ContextMenu>
                    <ContextMenu>
                        <MenuItem
                            Header="Add Market"
                            Command="{Binding AddCommand}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/Add.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </TreeView.ContextMenu>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction
                            Command="{Binding SelectedChangedCommand}"
                            CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type vm:MarketViewModel}" ItemsSource="{Binding Lists}" >
                        <StackPanel Orientation="Horizontal">
                            <CheckBox
                                IsChecked="{Binding Active}"
                                Command="{Binding ActiveCommand}" />
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{} {0} ({1})">
                                        <Binding Path="Model.Name"/>
                                        <Binding Path="Lists.Count"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem
                                            Header="Delete market"
                                            Command="{Binding DeleteCommand}" >
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Delete.png" Width="16" Height="16"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem
                                            Header="New list"
                                            Command="{Binding NewListCommand}" >
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Add.png" Width="16" Height="16"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem
                                            Header="Import list..."
                                            Command="{Binding ImportListCommand}" >
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Import.png" Width="16" Height="16"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type vm:ListViewModel}" ItemsSource="{Binding Symbols}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{} {0} ({1})">
                                        <Binding Path="Model.Name"/>
                                        <Binding Path="Symbols.Count"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem
                                            Header="Delete list"
                                            Command="{Binding DeleteCommand}" >
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Delete.png" Width="16" Height="16"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem
                                            Header="Export list..."
                                            Command="{Binding ExportListCommand}" >
                                            <MenuItem.Icon>
                                                <Image Source="/Resources/Export.png" Width="16" Height="16"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type vm:SymbolViewModel}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Model.Name}" />
                        </StackPanel>
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>
        </DockPanel>
        <ContentControl
            Grid.Column="1"
            Margin="7,0,0,0"
            Content="{Binding Path=SelectedItem}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type vm:MarketViewModel}">
                    <TabControl>
                        <TabItem Header="{Binding Symbols.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Symbols ({0}), FallbackValue=Symbols}">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        DisplayMemberPath="Name"
                                        ItemsSource="{Binding Accounts}"
                                        MinWidth="120"
                                        SelectedValue="{Binding SelectedAccount, Mode=TwoWay}"
                                        ToolTip="Selected account"
                                        Visibility="{Binding Accounts.Count, Converter={viewsupport:BooleanToVisibilityConverter}}">
                                    </ComboBox>
                                    <Grid>
                                        <CheckBox
                                            ToolTip="Check all selected"
                                            VerticalAlignment="Center"
                                            IsChecked="{Binding CheckAll}"
                                            Command="{Binding CheckAllCommand}"
                                            CommandParameter="{Binding ElementName=marketSymbolList, Path=SelectedItems}">
                                        </CheckBox>
                                    </Grid>
                                    <Button
                                        ToolTip="Add symbol" 
                                        Command="{Binding AddSymbolCommand}">
                                        <Image Source="/Resources\Add.png" Width="16" Height="16"/>
                                    </Button>
                                    <Button
                                        ToolTip="Delete symbols"
                                        Command="{Binding DeleteSymbolsCommand}"
                                        CommandParameter="{Binding ElementName=marketSymbolList, Path=SelectedItems}">
                                        <Image Source="/Resources\Delete.png" Width="16" Height="16"/>
                                    </Button>
                                    <Button
                                        ToolTip="Import symbol list..."
                                        Command="{Binding ImportSymbolsCommand}">
                                        <Image Source="/Resources\Import.png" Width="16" Height="16"/>
                                    </Button>
                                    <Button
                                        ToolTip="Export symbol list..."
                                        Command="{Binding ExportSymbolsCommand}"
                                        CommandParameter="{Binding ElementName=marketSymbolList, Path=SelectedItems}">
                                        <Image Source="/Resources\Export.png" Width="16" Height="16"/>
                                    </Button>
                                    <Button
                                        ToolTip="Add to new symbol list"
                                        Command="{Binding AddToSymbolListCommand}"
                                        CommandParameter="{Binding ElementName=marketSymbolList, Path=SelectedItems}">
                                        <Image Source="/Resources\AddList.png" Width="16" Height="16"/>
                                    </Button>
                                </ToolBar>
                                <wpf:ExDataGrid
                                    x:Name="marketSymbolList"
                                    CanUserFreeze="False"
                                    CanUserSelectDistinct="True"
                                    CanUserGroup="False"
                                    CanUserFilter="True"
                                    CanUserReorderColumns="True"
                                    AutoGenerateColumns="False"
                                    GridLinesVisibility="None"
                                    SelectedValue="{Binding SelectedSymbol, Mode=TwoWay}"
                                    FrozenColumnCount="1"
                                    ExSelectedItems="{Binding SelectedItems}"
                                    ExItemsSource="{Binding Symbols}"
                                    ExColumns="{Binding SymbolColumns}"
                                    ExColumnsInfo="{Binding Source={StaticResource settings}, Path=MarketSymbolsColumnsInfo}">
                                </wpf:ExDataGrid>
                            </DockPanel>
                        </TabItem>
                        <TabItem
                            Header="{Binding Balances.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Balance ({0}), FallbackValue=Balance}"
                            Visibility="{Binding Accounts.Count, Converter={viewsupport:BooleanToVisibilityConverter}}">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        DisplayMemberPath="Name"
                                        ItemsSource="{Binding Accounts}"
                                        MinWidth="120"
                                        SelectedValue="{Binding SelectedAccount, Mode=TwoWay}"
                                        ToolTip="Selected account">
                                    </ComboBox>
                                </ToolBar>
                                <wpf:ExDataGrid
                                    CanUserFreeze="False"
                                    CanUserSelectDistinct="True"
                                    CanUserGroup="False"
                                    CanUserFilter="True"
                                    CanUserReorderColumns="True"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    AutoGenerateColumns="False"
                                    IsReadOnly="False"
                                    GridLinesVisibility="None"
                                    FrozenColumnCount="1"
                                    ExSelectedItems="{Binding SelectedItems}"
                                    ExItemsSource="{Binding Balances}"
                                    ExColumnsInfo="{Binding Source={StaticResource settings}, Path=AccountBalanceColumnsInfo}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Equity" Binding="{Binding Equity, NotifyOnTargetUpdated=True}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource BlinkCell}">
                                                    <Setter Property="Background" Value="{Binding EquityChange, Converter={viewsupport:ToBrushConverter}}" />
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Cash" Binding="{Binding Cash, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="Profit" Binding="{Binding Profit, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="Profit today" Binding="{Binding DayProfit, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="Currency" Binding="{Binding Currency, NotifyOnTargetUpdated=True}"/>
                                    </DataGrid.Columns>
                                </wpf:ExDataGrid>
                            </DockPanel>
                        </TabItem>
                        <TabItem
                            Header="{Binding Orders.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Orders ({0}), FallbackValue=Orders}"
                            Visibility="{Binding Accounts.Count, Converter={viewsupport:BooleanToVisibilityConverter}}">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        DisplayMemberPath="Name"
                                        ItemsSource="{Binding Accounts}"
                                        MinWidth="120"
                                        SelectedValue="{Binding SelectedAccount, Mode=TwoWay}"
                                        ToolTip="Selected account">
                                    </ComboBox>
                                </ToolBar>
                                <wpf:ExDataGrid
                                    CanUserFreeze="False"
                                    CanUserSelectDistinct="True"
                                    CanUserGroup="False"
                                    CanUserFilter="True"
                                    CanUserReorderColumns="True"
                                    CellStyle="{StaticResource BlinkCell}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    AutoGenerateColumns="False"
                                    IsReadOnly="False"
                                    GridLinesVisibility="None"
                                    FrozenColumnCount="1"
                                    ExSelectedItems="{Binding SelectedItems}"
                                    ExItemsSource="{Binding Orders}"
                                    ExColumnsInfo="{Binding Source={StaticResource settings}, Path=AccountOrdersColumnsInfo}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Id" Binding="{Binding Id, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="Symbol" Binding="{Binding Symbol, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="Price" Binding="{Binding Price, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="PriceCurrency" Binding="{Binding PriceCurrency, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="Time" Binding="{Binding Time, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="Type" Binding="{Binding Type, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="Status" Binding="{Binding Status, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="SecurityType" Binding="{Binding SecurityType, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="Direction" Binding="{Binding Direction, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="Value" Binding="{Binding OrderValue, NotifyOnTargetUpdated=True}"/>
                                    </DataGrid.Columns>
                                    <DataGrid.Resources>
                                        <ContextMenu
                                            x:Key="RowMenu"
                                            DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                            <MenuItem
                                                Header="Close order"
                                                Command="{Binding CloseOrderCommand}">
                                                <MenuItem.Icon>
                                                    <Image Source="/Resources/Delete.png" Width="16" Height="16"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </DataGrid.Resources>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="DataGridRow" >
                                            <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
                                        </Style>
                                    </DataGrid.RowStyle>
                                </wpf:ExDataGrid>
                            </DockPanel>
                        </TabItem>
                        <TabItem
                            Header="{Binding Positions.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Positions ({0}), FallbackValue=Positions}"
                            Visibility="{Binding Accounts.Count, Converter={viewsupport:BooleanToVisibilityConverter}}">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        DisplayMemberPath="Name"
                                        ItemsSource="{Binding Accounts}"
                                        MinWidth="120"
                                        SelectedValue="{Binding SelectedAccount, Mode=TwoWay}"
                                        ToolTip="Selected account">
                                    </ComboBox>
                                </ToolBar>
                                <wpf:ExDataGrid
                                    CanUserFreeze="False"
                                    CanUserSelectDistinct="True"
                                    CanUserGroup="False"
                                    CanUserFilter="True"
                                    CanUserReorderColumns="True"
                                    CellStyle="{StaticResource BlinkCell}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    AutoGenerateColumns="False"
                                    IsReadOnly="False"
                                    GridLinesVisibility="None"
                                    FrozenColumnCount="1"
                                    ExSelectedItems="{Binding SelectedItems}"
                                    ExItemsSource="{Binding Positions}"
                                    ExColumnsInfo="{Binding Source={StaticResource settings}, Path=AccountPositionsColumnsInfo}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Symbol" Binding="{Binding Symbol, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="SecurityType" Binding="{Binding SecurityType, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="Currency" Binding="{Binding CurrencySymbol, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="AveragePrice" Binding="{Binding AveragePrice, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="MarketPrice" Binding="{Binding MarketPrice, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="ConversionRate" Binding="{Binding ConversionRate, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="MarketValue" Binding="{Binding MarketValue, NotifyOnTargetUpdated=True}"/>
                                        <DataGridTextColumn Header="UnrealizedPnL" Binding="{Binding UnrealizedPnL, NotifyOnTargetUpdated=True}"/>
                                    </DataGrid.Columns>
                                    <DataGrid.Resources>
                                        <ContextMenu
                                            x:Key="RowMenu"
                                            DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                            <MenuItem
                                                Header="Close position"
                                                Command="{Binding ClosePositionCommand}">
                                                <MenuItem.Icon>
                                                    <Image Source="/Resources/Delete.png" Width="16" Height="16"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </DataGrid.Resources>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="DataGridRow" >
                                            <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
                                        </Style>
                                    </DataGrid.RowStyle>
                                </wpf:ExDataGrid>
                            </DockPanel>
                        </TabItem>
                        <TabItem
                            Header="{Binding ClosedTrades.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Trades ({0}), FallbackValue=Trades}"
                            Visibility="{Binding Accounts.Count, Converter={viewsupport:BooleanToVisibilityConverter}}">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        DisplayMemberPath="Name"
                                        ItemsSource="{Binding Accounts}"
                                        MinWidth="120"
                                        SelectedValue="{Binding SelectedAccount, Mode=TwoWay}"
                                        ToolTip="Selected account">
                                    </ComboBox>
                                </ToolBar>
                                <wpf:ExDataGrid
                                    CanUserFreeze="False"
                                    CanUserSelectDistinct="True"
                                    CanUserGroup="False"
                                    CanUserFilter="True"
                                    CanUserReorderColumns="True"
                                    IsReadOnly="True"
                                    GridLinesVisibility="None"
                                    AutoGenerateColumns="False"
                                    FrozenColumnCount="1"
                                    ExSelectedItems="{Binding SelectedItems}"
                                    ExItemsSource="{Binding ClosedTrades}"
                                    ExColumnsInfo="{Binding Source={StaticResource settings}, Path=AccountClosedTradesColumnsInfo}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Entry time" Binding="{Binding EntryTime, StringFormat=u}"/>
                                        <DataGridTextColumn Header="Exit time" Binding="{Binding ExitTime, StringFormat=u}"/>
                                        <DataGridTextColumn Header="Direction" Binding="{Binding Direction}"/>
                                        <DataGridTextColumn Header="Symbol" Binding="{Binding Symbol.Value}"/>
                                        <DataGridTextColumn Header="Type" Binding="{Binding Symbol.SecurityType}"/>
                                        <DataGridTextColumn Header="Entry price" Binding="{Binding EntryPrice}" ElementStyle="{StaticResource RightCell}"/>
                                        <DataGridTextColumn Header="Exit price" Binding="{Binding ExitPrice}" ElementStyle="{StaticResource RightCell}"/>
                                        <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}" ElementStyle="{StaticResource RightCell}"/>
                                        <DataGridTextColumn Header="Profit" Binding="{Binding ProfitLoss}" ElementStyle="{StaticResource RightCell}"/>
                                        <DataGridTextColumn Header="Fees" Binding="{Binding TotalFees}" ElementStyle="{StaticResource RightCell}"/>
                                        <DataGridTextColumn Header="Duration" Binding="{Binding Duration, StringFormat='{}{0:d\\.hh\\:mm\\:ss}'}" ElementStyle="{StaticResource RightCell}"/>
                                    </DataGrid.Columns>
                                </wpf:ExDataGrid>
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="Settings">
                            <xctk:PropertyGrid
                                ShowTitle="False"
                                ShowSearchBox="False"
                                ShowSummary="True"
                                ShowAdvancedOptions="False"
                                ShowSortOptions="False"
                                SelectedObject="{Binding Model}">
                            </xctk:PropertyGrid>
                        </TabItem>
                    </TabControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:ListViewModel}">
                    <TabControl>
                        <TabItem Header="{Binding Symbols.Count, Converter={viewsupport:StringFormatConverter}, ConverterParameter=Symbols ({0}), FallbackValue=Symbols}">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        Name="combobox"
                                        SelectedValue="{Binding MarketSymbol, Mode=TwoWay}"
                                        DisplayMemberPath="Model.Name"
                                        ItemsSource="{Binding MarketSymbols.View}"
                                        MinWidth="120"/>
                                    <Button
                                        ToolTip="Add symbol" 
                                        Command="{Binding AddSymbolCommand}"
                                        CommandParameter="{Binding ElementName=combobox, Path=SelectedValue}">
                                        <Image Source="/Resources\Add.png" Width="16" Height="16"/>
                                    </Button>
                                    <Button
                                        ToolTip="Remove symbols"
                                        Command="{Binding RemoveSymbolsCommand}"
                                        CommandParameter="{Binding ElementName=listbox, Path=SelectedItems}">
                                        <Image Source="/Resources\Delete.png" Width="16" Height="16"/>
                                    </Button>
                                </ToolBar>
                                <wpf:ExDataGrid
                                    x:Name="listbox"
                                    CanUserFreeze="False"
                                    CanUserSelectDistinct="True"
                                    CanUserGroup="False"
                                    CanUserFilter="True"
                                    CanUserReorderColumns="True"
                                    AutoGenerateColumns="False"
                                    GridLinesVisibility="None"
                                    SelectedValue="{Binding SelectedSymbol, Mode=TwoWay}"
                                    FrozenColumnCount="1"
                                    ExSelectedItems="{Binding SelectedItems}"
                                    ExItemsSource="{Binding Symbols}"
                                    ExColumns="{Binding SymbolColumns}"
                                    ExColumnsInfo="{Binding Source={StaticResource settings}, Path=MarketSymbolListsColumnsInfo}">
                                </wpf:ExDataGrid>
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="Settings">
                            <xctk:PropertyGrid
                                ShowTitle="False"
                                ShowSearchBox="False"
                                ShowSummary="True"
                                ShowAdvancedOptions="False"
                                ShowSortOptions="False"
                                SelectedObject="{Binding Model}">
                            </xctk:PropertyGrid>
                        </TabItem>
                    </TabControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:SymbolViewModel}">
                    <TabControl>
                        <TabItem Header ="Chart">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <Label
                                        Content="{Binding Model.Name}"
                                        FontSize="20"
                                        Margin="10 0 10 0"
                                        MinWidth="60"/>
                                    <ComboBox
                                        SelectedValue="{Binding Market.SelectedResolution, Mode=TwoWay}"
                                        ItemsSource="{Binding Market.ResolutionList}"
                                        MinWidth="120">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding UpdateCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>
                                    <xctk:DateTimePicker
                                        AutoCloseCalendar="True"
                                        BorderThickness="0"
                                        Value="{Binding Market.Date}"
                                        Format="ShortDate"
                                        Margin="6"
                                        TimePickerVisibility="Collapsed">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="ValueChanged">
                                                <i:InvokeCommandAction Command="{Binding UpdateCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </xctk:DateTimePicker>
                                </ToolBar>
                                <amcharts:AmChart
                                    ItemsSource="{Binding Charts}"
                                    Visibility="{Binding ShowCharts, Converter={viewsupport:BooleanToVisibilityConverter}}" />
                            </DockPanel>
                        </TabItem>
                        <TabItem Header ="Fundamentals">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        SelectedValue="{Binding Market.SelectedReportPeriod, Mode=TwoWay}"
                                        ItemsSource="{Binding Market.ReportPeriodList}"
                                        MinWidth="120">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding UpdateCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>
                                </ToolBar>
                                <wpf:ExDataGrid
                                    CanUserFreeze="False"
                                    CanUserSelectDistinct="False"
                                    CanUserGroup="False"
                                    CanUserFilter="False"
                                    CanUserReorderColumns="False"
                                    AutoGenerateColumns="False"
                                    GridLinesVisibility="None"
                                    FrozenColumnCount="1"
                                    ExItemsSource="{Binding FundamentalRows}"
                                    ExColumns="{Binding PeriodColumns}">
                                </wpf:ExDataGrid>
                            </DockPanel>
                        </TabItem>
                    </TabControl>
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>
    </Grid>
</UserControl>
